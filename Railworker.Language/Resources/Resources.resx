<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="add_as_preload_consist" xml:space="preserve">
    <value>Add as preload consist</value>
  </data>
  <data name="add_new" xml:space="preserve">
    <value>Add new</value>
  </data>
  <data name="add_to_rules" xml:space="preserve">
    <value>Add to rules</value>
  </data>
  <data name="always" xml:space="preserve">
    <value>Always</value>
  </data>
  <data name="asfdsdfads" xml:space="preserve">
    <value />
  </data>
  <data name="author" xml:space="preserve">
    <value>Author</value>
  </data>
  <data name="basic_information" xml:space="preserve">
    <value>Basic information</value>
  </data>
  <data name="browse" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="change_number" xml:space="preserve">
    <value>Change number</value>
  </data>
  <data name="child_object" xml:space="preserve">
    <value>Child object</value>
  </data>
  <data name="child_objects" xml:space="preserve">
    <value>Child objects</value>
  </data>
  <data name="choose_directory" xml:space="preserve">
    <value>Choose directory</value>
  </data>
  <data name="clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="clear_assets" xml:space="preserve">
    <value>Clear assets</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="consists" xml:space="preserve">
    <value>Consists</value>
  </data>
  <data name="container_components" xml:space="preserve">
    <value>Container components</value>
  </data>
  <data name="control_values" xml:space="preserve">
    <value>Control values</value>
  </data>
  <data name="control_value_name" xml:space="preserve">
    <value>Control value name</value>
  </data>
  <data name="cran" xml:space="preserve">
    <value>CRAN</value>
  </data>
  <data name="cran_addons_page" xml:space="preserve">
    <value>CRAN addons</value>
  </data>
  <data name="cran_addon_edit" xml:space="preserve">
    <value>CRAN addon edit</value>
  </data>
  <data name="cran_admin" xml:space="preserve">
    <value>CRAN admin</value>
  </data>
  <data name="cran_new_addon" xml:space="preserve">
    <value>CRAN new addon</value>
  </data>
  <data name="create_vehicle_variation" xml:space="preserve">
    <value>Create vehicle variation</value>
  </data>
  <data name="create_vehicle_variationfds" xml:space="preserve">
    <value />
  </data>
  <data name="default_value" xml:space="preserve">
    <value>Default value</value>
  </data>
  <data name="delete_selected" xml:space="preserve">
    <value>Delete Selected</value>
  </data>
  <data name="description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="directory" xml:space="preserve">
    <value>Directory</value>
  </data>
  <data name="download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="do_for_all" xml:space="preserve">
    <value>Do for all</value>
  </data>
  <data name="driving_characteristics_mismatch" xml:space="preserve">
    <value>We found different driving charactersitics for "{0}". Do you wish to keep the custom "{0}"? from the repaint?</value>
  </data>
  <data name="dsfa" xml:space="preserve">
    <value />
  </data>
  <data name="edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="edit_scenario" xml:space="preserve">
    <value>Edit scenario</value>
  </data>
  <data name="edit_selected" xml:space="preserve">
    <value>Edit selected</value>
  </data>
  <data name="enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="enabled" xml:space="preserve">
    <value>Enabled</value>
  </data>
  <data name="erase" xml:space="preserve">
    <value>Erase</value>
  </data>
  <data name="export" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="failed_to_read_file" xml:space="preserve">
    <value>Failed to read file</value>
  </data>
  <data name="fdafdsafa" xml:space="preserve">
    <value />
  </data>
  <data name="file" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="filename" xml:space="preserve">
    <value>Filename</value>
  </data>
  <data name="file_already_exists" xml:space="preserve">
    <value>File already exists</value>
  </data>
  <data name="file_does_not_exist" xml:space="preserve">
    <value>File does not exist</value>
  </data>
  <data name="file_extensions_to_ignore" xml:space="preserve">
    <value>File extensions to ignore</value>
  </data>
  <data name="find" xml:space="preserve">
    <value>Find</value>
  </data>
  <data name="find_repaints" xml:space="preserve">
    <value>Find repaints</value>
  </data>
  <data name="guid" xml:space="preserve">
    <value>Guid</value>
  </data>
  <data name="id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="insert_above" xml:space="preserve">
    <value>Insert above</value>
  </data>
  <data name="insert_below" xml:space="preserve">
    <value>Insert below</value>
  </data>
  <data name="inspector" xml:space="preserve">
    <value>Inspector</value>
  </data>
  <data name="install" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="inverted" xml:space="preserve">
    <value>Inverted</value>
  </data>
  <data name="keep" xml:space="preserve">
    <value>Keep</value>
  </data>
  <data name="keep_driver_position" xml:space="preserve">
    <value>We found a different driver position in the repaint. Do you want to keep the custom driver position?</value>
  </data>
  <data name="keep_max_speed" xml:space="preserve">
    <value>Keep maximum speed</value>
  </data>
  <data name="keep_numbering_list" xml:space="preserve">
    <value>Do you wish to keep the custom numbering list from the repaint?</value>
  </data>
  <data name="language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="license" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="loading" xml:space="preserve">
    <value>Loading</value>
  </data>
  <data name="loading_authors" xml:space="preserve">
    <value>Loading authors</value>
  </data>
  <data name="loading_routes" xml:space="preserve">
    <value>Loading routes</value>
  </data>
  <data name="loading_scenarios" xml:space="preserve">
    <value>Loading scenarios</value>
  </data>
  <data name="look_up" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="loose_consist" xml:space="preserve">
    <value>Loose consist</value>
  </data>
  <data name="management" xml:space="preserve">
    <value>Management</value>
  </data>
  <data name="manage_addons" xml:space="preserve">
    <value>Manage addons</value>
  </data>
  <data name="manage_authors" xml:space="preserve">
    <value>Manage authors</value>
  </data>
  <data name="manage_files" xml:space="preserve">
    <value>Manage files</value>
  </data>
  <data name="maximum_value" xml:space="preserve">
    <value>Maximum value</value>
  </data>
  <data name="minimum_value" xml:space="preserve">
    <value>Minimum value</value>
  </data>
  <data name="msg_error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="msg_first_time" xml:space="preserve">
    <value>Please select your Train Simulator directory</value>
  </data>
  <data name="msg_message" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="msg_no_directory_selected" xml:space="preserve">
    <value>No directory selected</value>
  </data>
  <data name="msg_ts_path_invalid" xml:space="preserve">
    <value>Selected path is invalid! (Check if it contains RailWorks.exe)</value>
  </data>
  <data name="msg_ts_path_required" xml:space="preserve">
    <value>A valid TS path is required to run this application. The application will now exit.</value>
  </data>
  <data name="msg_warning" xml:space="preserve">
    <value>Warning</value>
  </data>
  <data name="name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="new_vehicle" xml:space="preserve">
    <value>Replacement vehicle</value>
  </data>
  <data name="not_found" xml:space="preserve">
    <value>Not found</value>
  </data>
  <data name="number" xml:space="preserve">
    <value>Number</value>
  </data>
  <data name="number_list" xml:space="preserve">
    <value>Number list</value>
  </data>
  <data name="old_vehicle" xml:space="preserve">
    <value>Old vehicle</value>
  </data>
  <data name="open_file" xml:space="preserve">
    <value>Open file</value>
  </data>
  <data name="open_scenario_directory" xml:space="preserve">
    <value>Open scenario directory</value>
  </data>
  <data name="path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="preloads" xml:space="preserve">
    <value>Preloads</value>
  </data>
  <data name="processing_tracks_bin" xml:space="preserve">
    <value>Processing Tracks.bin</value>
  </data>
  <data name="process_tracks_bin" xml:space="preserve">
    <value>Process Tracks.bin</value>
  </data>
  <data name="process_track_bin" xml:space="preserve">
    <value>Process Tracks.bin</value>
  </data>
  <data name="product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="protected" xml:space="preserve">
    <value>Protected</value>
  </data>
  <data name="provider" xml:space="preserve">
    <value>Provider</value>
  </data>
  <data name="reading_scenario_files" xml:space="preserve">
    <value>Reading scenario files</value>
  </data>
  <data name="refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="repaint_search_dir" xml:space="preserve">
    <value>Repaint search directory</value>
  </data>
  <data name="repaint_updater" xml:space="preserve">
    <value>Repaint updater</value>
  </data>
  <data name="replace" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="replace_all" xml:space="preserve">
    <value>Replace all</value>
  </data>
  <data name="replace_with" xml:space="preserve">
    <value>Replace with</value>
  </data>
  <data name="reversed" xml:space="preserve">
    <value>Reversed</value>
  </data>
  <data name="rolling_stock" xml:space="preserve">
    <value>Rolling stock</value>
  </data>
  <data name="rolling_stock_replacement" xml:space="preserve">
    <value>Rolling stock replacement</value>
  </data>
  <data name="route" xml:space="preserve">
    <value>Route</value>
  </data>
  <data name="routes" xml:space="preserve">
    <value>Routes</value>
  </data>
  <data name="routes_and_scenarios" xml:space="preserve">
    <value>Routes and scenarios</value>
  </data>
  <data name="routes_show_list" xml:space="preserve">
    <value>Show list</value>
  </data>
  <data name="route_visualizer" xml:space="preserve">
    <value>Route Visualizer</value>
  </data>
  <data name="rwppackager_disclaimer" xml:space="preserve">
    <value>Unlike some other programs that may try to generate an RWP file. This program actually creates a 1 to 1 .rwp file to that of Railworks. The RWP file format is actually just a normal .zip file, only with some bytes prefixed to beginning of the file. If you remove those bytes you can open it using any program. The reason you can open it using 7zip is that 7zip is very smart and treats it like an SFX but thats getting way to complicated. Those extra bytes at the beginning of the file are just the author's name and a 1 (unprotected) or 2 (licensed).</value>
  </data>
  <data name="rwp_packager" xml:space="preserve">
    <value>RWP Packager</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="save_as" xml:space="preserve">
    <value>Save as</value>
  </data>
  <data name="save_copy" xml:space="preserve">
    <value>Save copy</value>
  </data>
  <data name="save_file" xml:space="preserve">
    <value>Save file</value>
  </data>
  <data name="scanning_bin_files" xml:space="preserve">
    <value>Scanning .bin files</value>
  </data>
  <data name="scenario" xml:space="preserve">
    <value>Scenario</value>
  </data>
  <data name="scenarios" xml:space="preserve">
    <value>Scenarios</value>
  </data>
  <data name="scenarios_show_list" xml:space="preserve">
    <value>View scenario list</value>
  </data>
  <data name="scenario_downloader" xml:space="preserve">
    <value>Scenario downloader</value>
  </data>
  <data name="script" xml:space="preserve">
    <value>Script</value>
  </data>
  <data name="script_component" xml:space="preserve">
    <value>Script component</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="searching_for_addons" xml:space="preserve">
    <value>Searching for addons</value>
  </data>
  <data name="search_vehicles" xml:space="preserve">
    <value>Search vehicles</value>
  </data>
  <data name="select_ts_path" xml:space="preserve">
    <value>Select Train Simulator directory</value>
  </data>
  <data name="serz_exe_path" xml:space="preserve">
    <value>serz.exe path</value>
  </data>
  <data name="settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="suggested_display_name" xml:space="preserve">
    <value>Suggested display name:</value>
  </data>
  <data name="suggested_filename" xml:space="preserve">
    <value>Suggested filename:</value>
  </data>
  <data name="template_bin" xml:space="preserve">
    <value>Template .bin</value>
  </data>
  <data name="template_bin_explanation" xml:space="preserve">
    <value>The file which should be used as the default file for repaints. Its values will be used to update the repaint .bin files.</value>
  </data>
  <data name="test" xml:space="preserve">
    <value />
  </data>
  <data name="test2" xml:space="preserve">
    <value />
  </data>
  <data name="test3" xml:space="preserve">
    <value />
  </data>
  <data name="ts_path" xml:space="preserve">
    <value>TS path</value>
  </data>
  <data name="turn_around_vehicle" xml:space="preserve">
    <value>Turn around</value>
  </data>
  <data name="unknown_name" xml:space="preserve">
    <value>Unknown name</value>
  </data>
  <data name="unlicensed" xml:space="preserve">
    <value>Unlicensed</value>
  </data>
  <data name="unprotected" xml:space="preserve">
    <value>Unprotected</value>
  </data>
  <data name="update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="use_system_language" xml:space="preserve">
    <value>Use system language</value>
  </data>
  <data name="vehicle_naming_conventions" xml:space="preserve">
    <value>Naming hints: ND means "No Driver", KI (german for AI) is for non player trains, ST is for "Static" vehicles. It's good practise to prefix your [Author] name in brackets. Example: [Author] Locomotive KI ND</value>
  </data>
</root>